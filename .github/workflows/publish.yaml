name: Publish Multi-version Docs
on:
  push:
    branches: [ main, release/* ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

      - name: Parse version list
        id: versions
        run: |
          if [ -f ".github/versions.list" ]; then
            VERSIONS=$(grep -v '^#' .github/versions.list | grep -v '^$' | awk '{print $1}' | tr '\n' ' ')
            echo "versions=${VERSIONS}" >> $GITHUB_OUTPUT
          else
            echo "versions=main" >> $GITHUB_OUTPUT
          fi

      - name: Clean output dir
        run: |
          rm -rf output
          mkdir output

      - name: Build docs for all versions
        run: |
          IFS=' ' read -ra VERSION_ARRAY <<< "${{ steps.versions.outputs.versions }}"
          for VERSION in "${VERSION_ARRAY[@]}"; do
            echo "Building version: $VERSION"
            if [ "$VERSION" = "main" ]; then
              git checkout main
              OUT_DIR="latest"
            else
              git fetch origin $VERSION:$VERSION || true
              git checkout $VERSION || git checkout origin/$VERSION
              OUT_DIR="$VERSION"
            fi
            rm -rf html
            cp Doxyfile Doxyfile.tmp
            echo "PROJECT_NUMBER = $VERSION" >> Doxyfile.tmp
            echo "OUTPUT_DIRECTORY = html" >> Doxyfile.tmp
            sed -i 's|HTML_EXTRA_FILES.*|HTML_EXTRA_FILES = doxygen-awesome-darkmode-toggle.js \\n                         doxygen-awesome-fragment-copy-button.js \\n                         doxygen-awesome-paragraph-link.js \\n                         doxygen-custom/toggle-alternative-theme.js \\n                         doxygen-awesome-interactive-toc.js \\n                         doxygen-awesome-tabs.js \\n                         docs/version-switcher.js|' Doxyfile.tmp
            sed -i 's|HTML_EXTRA_STYLESHEET.*|HTML_EXTRA_STYLESHEET = doxygen-awesome.css \\n                         doxygen-custom/custom.css \\n                         doxygen-awesome-sidebar-only.css \\n                         doxygen-awesome-sidebar-only-darkmode-toggle.css \\n                         doxygen-custom/custom-alternative.css|' Doxyfile.tmp
            doxygen Doxyfile.tmp
            mkdir -p output/$OUT_DIR
            if [ -d "html" ]; then
              mv html/* output/$OUT_DIR/
              rm -rf html
            fi
          done
          git checkout main

      - name: Generate version manifest
        run: |
          cd output
          echo '{"versions": [' > versions.json
          VERSIONS_FROM_LIST=""
          if [ -f "../.github/versions.list" ]; then
            VERSIONS_FROM_LIST=$(grep -v '^#' ../.github/versions.list | grep -v '^$' | awk '{print $1}' | tr '\n' ' ')
          else
            VERSIONS_FROM_LIST="main"
          fi
          IFS=' ' read -ra VERSION_ARRAY <<< "$VERSIONS_FROM_LIST"
          VERSIONS_JSON=""
          for VERSION in "${VERSION_ARRAY[@]}"; do
            if [ "$VERSION" = "main" ]; then
              DIR_NAME="latest"
            else
              DIR_NAME="$VERSION"
            fi
            if [ -n "$VERSIONS_JSON" ]; then
              VERSIONS_JSON="$VERSIONS_JSON,\"$DIR_NAME\""
            else
              VERSIONS_JSON="\"$DIR_NAME\""
            fi
          done
          echo "$VERSIONS_JSON" >> versions.json
          echo ']}' >> versions.json
          for dir in */; do
            if [ -d "$dir" ]; then
              cp versions.json "$dir/"
            fi
          done

      - name: Prepare deployment
        run: |
          touch output/.nojekyll
          cat > output/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <meta http-equiv="refresh" content="0; url=./latest/html/" />
            <title>Redirecting...</title>
            <script>
              window.location.href = './latest/html/';
            </script>
          </head>
          <body>
            <p>Redirecting to latest version...</p>
            <p>If you are not redirected automatically, <a href="./latest/html/">click here</a>.</p>
          </body>
          </html>
          EOF
          cat > output/404.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <meta http-equiv="refresh" content="3; url=./latest/html/" />
            <title>Page Not Found - Redirecting...</title>
            <style>
              body { font-family: Arial, sans-serif; text-align: center; padding: 50px; background-color: #f5f5f5; }
              .container { max-width: 600px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
              .error-code { font-size: 72px; color: #e74c3c; margin-bottom: 20px; }
              .message { font-size: 18px; color: #333; margin-bottom: 20px; }
              .link { color: #3498db; text-decoration: none; }
              .link:hover { text-decoration: underline; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="error-code">404</div>
              <div class="message">
                <h2>Page Not Found</h2>
                <p>The page you're looking for doesn't exist.</p>
                <p>Redirecting to the latest documentation in 3 seconds...</p>
              </div>
              <p><a href="./latest/html/" class="link">Click here if you're not redirected automatically</a></p>
            </div>
            <script>
              setTimeout(function() { window.location.href = './latest/html/'; }, 3000);
            </script>
          </body>
          </html>
          EOF

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output
          publish_branch: gh-pages
          keep_files: false