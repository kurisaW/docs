name: Publish Multi-version Docs
on:
  push:
    branches: [ main, release/* ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

      - name: Parse version list
        id: versions
        run: |
          if [ -f ".github/versions.list" ]; then
            VERSIONS=$(grep -v '^#' .github/versions.list | grep -v '^$' | awk '{print $1}' | tr '\n' ' ' | sed 's/ $//')
            echo "versions=${VERSIONS}" >> $GITHUB_OUTPUT
          else
            echo "versions=main" >> $GITHUB_OUTPUT
          fi
          echo "Versions to build: $VERSIONS"

      - name: Build docs
        run: |
          IFS=' ' read -ra VERSION_ARRAY <<< "${{ steps.versions.outputs.versions }}"
          
          for VERSION in "${VERSION_ARRAY[@]}"; do
            echo "Building version: $VERSION"
            
            if [ "$VERSION" = "main" ]; then
              OUT_DIR="latest"
            else
              OUT_DIR="$VERSION"
            fi

            mkdir -p "output/$OUT_DIR"
            cp Doxyfile Doxyfile.tmp
            echo "PROJECT_NUMBER = $VERSION" >> Doxyfile.tmp
            echo "HTML_EXTRA_FILES = docs/version-switcher.js" >> Doxyfile.tmp
            echo "HTML_EXTRA_STYLESHEET = docs/version-switcher.css" >> Doxyfile.tmp
            doxygen Doxyfile.tmp

            if [ -d "html" ]; then
              mv html/* "output/$OUT_DIR/"
            fi
          done

      - name: Generate version manifest
        run: |
          cd output
          # 只匹配字母数字目录名
          echo '{"versions": [' > versions.json
          ls -d */ | grep -E '^[a-zA-Z0-9]+/' | sed 's/\///g' | jq -R -s -c 'split("\n")[:-1]' >> versions.json
          echo ']}' >> versions.json

      - name: Prepare deployment
        run: |
          # 创建根目录重定向
          cat > output/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta http-equiv="refresh" content="0; url=./latest/" />
          </head>
          <body>
            Redirecting to latest version...
          </body>
          </html>
          EOF
          
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output
          publish_branch: gh-pages
          keep_files: true